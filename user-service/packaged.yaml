AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: User Service Template
Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 900
    MemorySize: 1024
    CodeUri: app
    Layers:
    - Ref: UserServiceLayer
Parameters:
  StageName:
    Type: String
    AllowedValues:
    - dev
    - prod
    - staggin
    Default: dev
Resources:
  UserApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Sub: user-service-${StageName}
      StageName:
        Ref: StageName
      Cors:
        AllowOrigin: '''*'''
        AllowMethods: '''GET, PUT, POST'''
    Metadata:
      SamResourceId: UserApiGateway
  UserServiceLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: s3://techdice/18d5f880c5f27dc8e7fcd6e348c7e2ef
      LayerName:
        Fn::Sub: user-service-${StageName}
      RetentionPolicy: Delete
      CompatibleRuntimes:
      - nodejs18.x
    Metadata:
      SamResourceId: UserServiceLayer
  Signup:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: signup
      Handler: handler.signup
      Events:
        SignupApi:
          Type: Api
          Properties:
            Path: /signup
            Method: POST
            RestApiId:
              Ref: UserApiGateway
      CodeUri: s3://techdice/8b4571d8c3fd29e8292c14107d9dfa0d
    Metadata:
      SamResourceId: Signup
  Login:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: login
      Handler: handler.login
      Events:
        LoginApi:
          Type: Api
          Properties:
            Path: /login
            Method: POST
            RestApiId:
              Ref: UserApiGateway
      CodeUri: s3://techdice/8b4571d8c3fd29e8292c14107d9dfa0d
    Metadata:
      SamResourceId: Login
  Verify:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: verify
      Handler: handler.verify
      Events:
        VerifyApi:
          Type: Api
          Properties:
            Path: /verify
            Method: POST
            RestApiId:
              Ref: UserApiGateway
      CodeUri: s3://techdice/8b4571d8c3fd29e8292c14107d9dfa0d
    Metadata:
      SamResourceId: Verify
  Profile:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profile
      Handler: handler.profile
      Events:
        ProfileApiPOST:
          Type: Api
          Properties:
            Path: /user
            Method: POST
            RestApiId:
              Ref: UserApiGateway
        ProfileApiPUT:
          Type: Api
          Properties:
            Path: /user
            Method: PUT
            RestApiId:
              Ref: UserApiGateway
        ProfileApiGET:
          Type: Api
          Properties:
            Path: /user
            Method: GET
            RestApiId:
              Ref: UserApiGateway
      CodeUri: s3://techdice/8b4571d8c3fd29e8292c14107d9dfa0d
    Metadata:
      SamResourceId: Profile
  Cart:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: cart
      Handler: handler.cart
      Events:
        CartApiPOST:
          Type: Api
          Properties:
            Path: /cart
            Method: POST
            RestApiId:
              Ref: UserApiGateway
        CartApiPUT:
          Type: Api
          Properties:
            Path: /cart
            Method: PUT
            RestApiId:
              Ref: UserApiGateway
        CartApiGET:
          Type: Api
          Properties:
            Path: /cart
            Method: GET
            RestApiId:
              Ref: UserApiGateway
      CodeUri: s3://techdice/8b4571d8c3fd29e8292c14107d9dfa0d
    Metadata:
      SamResourceId: Cart
  Payment:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: payment
      Handler: handler.payment
      Events:
        PaymentApiPOST:
          Type: Api
          Properties:
            Path: /payment
            Method: POST
            RestApiId:
              Ref: UserApiGateway
        PaymentApiPUT:
          Type: Api
          Properties:
            Path: /payment
            Method: PUT
            RestApiId:
              Ref: UserApiGateway
        PaymentApiGET:
          Type: Api
          Properties:
            Path: /payment
            Method: GET
            RestApiId:
              Ref: UserApiGateway
      CodeUri: s3://techdice/8b4571d8c3fd29e8292c14107d9dfa0d
    Metadata:
      SamResourceId: Payment
Outputs:
  ApiGatewayURL:
    Description: ApiGateway URL
    Value:
      Fn::Sub: https://${UserApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${StageName}
